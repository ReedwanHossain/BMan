{"version":3,"sources":["components/Navbar.js","components/Sidebar.js","pages/DashboardPage.js","actions/postsActions.js","components/Post.js","pages/PostsPage.js","actions/postActions.js","actions/commentsActions.js","components/Comment.js","pages/SinglePostPage.js","actiontypes/dformtypes.js","actiontypes/bformtypes.js","factory/supportFactory.js","actions/bformAction.js","components/BasicForm.js","actions/dformAction.js","components/DynamicForm.js","MapboxLayer.js","actiontypes/maptypes.js","components/MapComp.js","actions/mapAction.js","pages/ReverseGeo.js","App.js","reducers/postsReducer.js","reducers/postReducer.js","reducers/commentsReducer.js","reducers/mapReducer.js","reducers/dformReducer.js","reducers/bformReducer.js","reducers/index.js","index.js"],"names":["Styles","styled","div","_templateObject","NavigationBar","react_default","a","createElement","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Item","react_router_dom","to","StyledSideNav","Sidebar_templateObject","RouterSideNav","withRouter","React","Component","constructor","props","super","this","onSidebarClose","setState","sidebarWidth","isOpen","onSidebarOpen","onItemClick","path","activePath","state","location","pathname","items","name","key","render","_this$state","style","width","onClick","map","item","Sidebar_NavItem","css","active","StyledNavItem","_templateObject2","NavItem","[object Object]","args","handleClick","_this$props","_templateObject3","Sidebar","DashboardPage","GET_POSTS","GET_POSTS_SUCCESS","GET_POSTS_FAILURE","getPosts","type","getPostsSuccess","posts","payload","getPostsFailure","Post","post","excerpt","title","body","substring","concat","connect","loading","hasErrors","dispatch","useEffect","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","t0","stop","_x","apply","arguments","GET_POST","GET_POST_SUCCESS","GET_POST_FAILURE","getPost","getPostSuccess","getPostFailure","GET_COMMENTS","GET_COMMENTS_SUCCESS","GET_COMMENTS_FAILURE","getComments","getCommentsSuccess","comments","getCommentsFailure","Comment","comment","email","match","params","postId","fetchComments","fetchPost","dformActionTypes","PASS_FIELD_PAIRS","GET_FIELD_PAIRS","bformActionTypes","CALL_REV_GEO","GET_URL_PARAMS","PASS_URL_PARAMS","SEARCH_AUTOCOMPLETE","SEARCH_SELECT_PLACE","GET_NEARBY_PLACES_BY_CATEGORY","getUrlParamFromJson","argFieldPairs","tempUrl","afp","value","join","e","console","log","setRequestObj","requestMethod","requestBaseURL","requestURLParam","requestBody","requestConfig","formData","FormData","parsedBody","rb","append","reqURL","reqConfig","method","header","content-type","callReverseGeo","reqObj","then","res","actionObj","rawResponse","hasOwnProperty","action_type","baseFormTypes","action_payload","responseTypeFromUrl","fieldPairs","dynamicform","responseRG","baseform","urlParams","getPairs","sendRequest","passParams","passURLParams","generateCompleteUrl","_useState","useState","_useState2","slicedToArray","baseUrl","setBaseUrl","_useState3","_useState4","completeUrl","setCompleteUrl","_useState5","_useState6","setRequestMethod","_useState7","_useState8","setReqObj","_useState9","_useState10","_useState11","_useState12","urlParam","tempReqObj","Form","Row","Col","Control","as","onChange","event","target","selectRequestMethod","custom","xs","placeholder","temp_url_param_array","url_param_obj","url","window","question","indexOf","hash","api_url","json_param","length","query","result","split","forEach","part","eq","substr","val","decodeURIComponent","from","index","push","getJsonFromUrl","property","Button","variant","latlng","passPair","passFieldPairs","getParams","generateLatLonField","setInputFields","inputFields","handleInputChange","values","hasLat","hasLng","lat","lng","Fragment","inputField","react","splice","handleRemoveFields","handleAddFields","MapBoxGLLayer","GridLayer","createLeafletElement","L","mapboxGL","propTypes","PropTypes","string","defaultProps","withLeaflet","mapActionTypes","INIT_GEO","SET_MARKER","SHOW_DETAILS","HIDE_DETAILS","zoom","suggestions","selectedPlace","initGeo","setMarker","showDetails","place","_this","setMapState","stateData","position","mapRef","createRef","latLng","prevState","objectSpread2","latitude","longitude","handleLocationFound","current","leafletElement","locate","msg","componentWillMount","componentWillReceiveProps","nextProps","geocoded_address","Address","address","vl","marker","Marker","Popup","Map","center","onLocationfound","ref","MapboxLayer","jsonResponse","setJsonResponse","Card","Body","Title","Subtitle","Jumbotron","components_BasicForm","components_DynamicForm","main_default","src","theme","components_MapComp","GridWrapper","App_templateObject","App","Sidebar_Sidebar","react_router","exact","component","PostsPage","SinglePostPage","ReverseGeo","initialState","INITIAL_STATE","hasLocation","markerMsg","mapReducer","action","dformReducer","nearbyPlaces","bformReducer","places","rootReducer","combineReducers","actions","store","createStore","composeWithDevTools","applyMiddleware","thunk","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c14cbc02.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Nav, Navbar } from 'react-bootstrap';\nimport styled from 'styled-components';\n\n\nconst Styles = styled.div`\n  .navbar { \n    background-color: #222;\n    position: fixed;\n    z-index: 1001;\n    width: -webkit-fill-available;\n  }\n  a, .navbar-nav, .navbar-light .nav-link {\n    color: #9FFFCB;\n    &:hover { color: white; }\n  }\n  .navbar-brand {\n    font-size: 1.4em;\n    color: #9FFFCB;\n    &:hover { color: white; }\n  }\n  .form-center {\n    position: absolute !important;\n    left: 25%;\n    right: 25%;\n  }\n`;\n\nexport const NavigationBar = () => (\n  <Styles>\n    <Navbar expand=\"lg\">\n      <Navbar.Brand href=\"/\">Barikoi DevTool</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n      \n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <Nav.Item><Link to=\"/\">Dashboard </Link></Nav.Item> \n          <Nav.Item><Link to=\"/posts\">Posts</Link></Nav.Item>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  </Styles>\n)","import React from 'react';\nimport styled from 'styled-components';\nimport { BrowserRouter as Router, Route, Link, withRouter } from \"react-router-dom\";\n\nconst StyledSideNav = styled.div`   \n    position: fixed;     /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\n    height: 100%;\n    z-index: 1;      /* Stay on top of everything */\n    top: 3.4em;      /* Stay at the top */\n    background-color: #222; /* Black */\n    overflow-x: hidden;     /* Disable horizontal scroll */\n    padding-top: 10px;\n`;\n\nclass SideNav extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            sidebarWidth: '0em',\n            activePath: props.location.pathname,\n            items: [\n                {\n                  path: '/', /* path is used as id to check which NavItem is active basically */\n                  name: 'Home',\n                  key: 1 /* Key is required, else console throws error. Does this please you Mr. Browser?! */\n                },\n                {\n                  path: '/posts',\n                  name: 'Post',\n                  key: 2\n                },\n                {\n                  path: '/revgeo',\n                  name: 'Reverse Geo',\n                  key: 3\n                },\n              ]\n        }\n    }\n\n    onSidebarClose = () => {\n        this.setState({ sidebarWidth: '0em', isOpen: false });\n    }\n  \n    onSidebarOpen = () => {\n        this.setState({ sidebarWidth: '15em', isOpen: true});\n    }\n\n    onItemClick = (path) => {\n        this.setState({ activePath: path });\n    }\n\n    render() {\n        const { items, activePath } = this.state;\n        \n        return(\n            <StyledSideNav style={{width: this.state.sidebarWidth}}>\n                {this.state.isOpen ?  <span className=\"closebtn\" onClick={this.onSidebarClose}>&times;</span>: <span  className=\"openbtn\" onClick={this.onSidebarOpen}>&#9776;</span>}\n                {\n                    items.map((item) => {\n                        return (\n                            <NavItem \n                                path={item.path}\n                                name={item.name}\n                                css={item.css}\n                                onItemClick={this.onItemClick}\n                                active={item.path === activePath}\n                                key={item.key}\n                            />\n                        );\n                    })\n                }\n            </StyledSideNav>\n        );\n    }\n}\n\nconst RouterSideNav = withRouter(SideNav);\n\nconst StyledNavItem = styled.div`\n    height: 70px;\n    width: 14em; /* width must be same size as NavBar to center */\n    text-align: left; /* Aligns <a> inside of NavIcon div */\n    margin-bottom: 0;   /* Puts space between NavItems */\n    margin-left:.8em;\n    a {\n        font-size: 1.2em;\n        line-height: 2.6em;\n        color: ${(props) => props.active ? \"white\" : \"#9FFFCB\"};\n        :hover {\n            opacity: 0.7;\n            text-decoration: none; /* Gets rid of underlining of icons */\n        }  \n    }\n`;\n\nclass NavItem extends React.Component {\n    handleClick = () => {\n        const { path, onItemClick } = this.props;\n        onItemClick(path);\n    }\n\n    render() {\n        const { active } = this.props;\n        return(\n            <StyledNavItem active={active}>\n                <Link to={this.props.path} className={this.props.css} onClick={this.handleClick}>\n                    {this.props.name}\n                </Link>\n            </StyledNavItem>\n        );\n    }\n}\n\nconst NavIcon = styled.div`\n\n`;\n\nexport default class Sidebar extends React.Component {\n    \n    render() {\n        return (\n            <div>\n                <RouterSideNav></RouterSideNav>\n                \n            </div>\n        );\n    }\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst DashboardPage = () => (\n  <section>\n    <h1>Dashboard</h1>\n    <p>This is the dashboard.</p>\n    <Link to=\"/posts\" className=\"button\">\n      View Posts\n    </Link>\n  </section>\n)\n\nexport default DashboardPage\n","export const GET_POSTS = 'GET POSTS'\nexport const GET_POSTS_SUCCESS = 'GET_POSTS_SUCCESS'\nexport const GET_POSTS_FAILURE = 'GET_POSTS_FAILURE'\n\nexport const getPosts = () => ({ type: GET_POSTS })\nexport const getPostsSuccess = posts => ({\n  type: GET_POSTS_SUCCESS,\n  payload: posts,\n})\nexport const getPostsFailure = () => ({ type: GET_POSTS_FAILURE })\n\nexport function fetchPosts() {\n  return async dispatch => {\n    dispatch(getPosts())\n\n    try {\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts')\n      const data = await response.json()\n\n      dispatch(getPostsSuccess(data))\n    } catch (error) {\n      dispatch(getPostsFailure())\n    }\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const Post = ({ post, excerpt }) => (\n  <article className={excerpt ? 'post-excerpt' : 'post'}>\n    <h2>{post.title}</h2>\n    <p>{excerpt ? post.body.substring(0, 100) : post.body}</p>\n\n    {excerpt && (\n      <Link to={`/posts/${post.id}`} className=\"button\">\n        View Post\n      </Link>\n    )}\n  </article>\n)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { fetchPosts } from '../actions/postsActions'\n\nimport { Post } from '../components/Post'\n\nconst PostsPage = ({ dispatch, loading, posts, hasErrors }) => {\n  useEffect(() => {\n    dispatch(fetchPosts())\n  }, [dispatch])\n\n  const renderPosts = () => {\n    if (loading) return <p>Loading posts...</p>\n    if (hasErrors) return <p>Unable to display posts.</p>\n\n    return posts.map(post => <Post key={post.id} post={post} excerpt />)\n  }\n\n  return (\n    <section>\n      <h1>Posts</h1>\n      {renderPosts()}\n    </section>\n  )\n}\n\nconst mapStateToProps = state => ({\n  loading: state.posts.loading,\n  posts: state.posts.posts,\n  hasErrors: state.posts.hasErrors,\n})\n\nexport default connect(mapStateToProps)(PostsPage)\n","export const GET_POST = 'GET POSTS'\nexport const GET_POST_SUCCESS = 'GET_POST_SUCCESS'\nexport const GET_POST_FAILURE = 'GET_POST_FAILURE'\n\nexport const getPost = () => ({ type: GET_POST })\nexport const getPostSuccess = post => ({\n  type: GET_POST_SUCCESS,\n  payload: post,\n})\nexport const getPostFailure = () => ({ type: GET_POST_FAILURE })\n\nexport function fetchPost(id) {\n  return async dispatch => {\n    dispatch(getPost())\n\n    try {\n      const response = await fetch(\n        `https://jsonplaceholder.typicode.com/posts/${id}`\n      )\n      const data = await response.json()\n\n      dispatch(getPostSuccess(data))\n    } catch (error) {\n      dispatch(getPostFailure())\n    }\n  }\n}\n","export const GET_COMMENTS = 'GET COMMENTS'\nexport const GET_COMMENTS_SUCCESS = 'GET_COMMENTS_SUCCESS'\nexport const GET_COMMENTS_FAILURE = 'GET_COMMENTS_FAILURE'\n\nexport const getComments = () => ({ type: GET_COMMENTS })\nexport const getCommentsSuccess = comments => ({\n  type: GET_COMMENTS_SUCCESS,\n  payload: comments,\n})\nexport const getCommentsFailure = () => ({ type: GET_COMMENTS_FAILURE })\n\nexport function fetchComments(postId) {\n  return async dispatch => {\n    dispatch(getComments())\n\n    try {\n      const response = await fetch(\n        `https://jsonplaceholder.typicode.com/comments?postId=${postId}`\n      )\n      const data = await response.json()\n\n      dispatch(getCommentsSuccess(data))\n    } catch (error) {\n      dispatch(getCommentsFailure())\n    }\n  }\n}\n","import React from 'react'\n\nexport const Comment = ({ comment }) => (\n  <aside className=\"comment\">\n    <h2>{comment.title}</h2>\n    <h3>{comment.email}</h3>\n    <p>{comment.body}</p>\n  </aside>\n)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { fetchPost } from '../actions/postActions'\nimport { fetchComments } from '../actions/commentsActions'\n\nimport { Post } from '../components/Post'\nimport { Comment } from '../components/Comment'\n\nconst SinglePostPage = ({\n  match,\n  dispatch,\n  post,\n  comments,\n  hasErrors,\n  loading,\n}) => {\n  useEffect(() => {\n    const { id } = match.params\n\n    dispatch(fetchComments(id))\n    dispatch(fetchPost(id))\n  }, [dispatch, match])\n\n  const renderPost = () => {\n    if (loading.post) return <p>Loading post...</p>\n    if (hasErrors.post) return <p>Unable to display post.</p>\n\n    return <Post post={post} />\n  }\n\n  const renderComments = () => {\n    if (loading.comments) return <p>Loading comments...</p>\n    if (hasErrors.comments) return <p>Unable to display comments.</p>\n\n    return comments.map(comment => (\n      <Comment key={comment.id} comment={comment} />\n    ))\n  }\n\n  return (\n    <section>\n      {renderPost()}\n      <h2>Comments</h2>\n      {renderComments()}\n    </section>\n  )\n}\n\nconst mapStateToProps = state => ({\n  post: state.post.post,\n  comments: state.comments.comments,\n  loading: { post: state.post.loading, comments: state.comments.loading },\n  hasErrors: { post: state.post.hasErrors, comments: state.comments.hasErrors },\n})\n\nexport default connect(mapStateToProps)(SinglePostPage)\n","const dformActionTypes = {\n    PASS_FIELD_PAIRS: 'PASS_FIELD_PAIRS',\n    GET_FIELD_PAIRS: 'GET_FIELD_PAIRS',\n};\n  \n  export default dformActionTypes;\n  ","const bformActionTypes = {\n    CALL_REV_GEO: 'CALL_REV_GEO',\n    GET_URL_PARAMS: 'GET_URL_PARAMS',\n    PASS_URL_PARAMS: 'PASS_URL_PARAMS',\n    SEARCH_AUTOCOMPLETE : 'SEARCH_AUTOCOMPLETE',\n    SEARCH_SELECT_PLACE : 'SEARCH_SELECT_PLACE',\n    GET_NEARBY_PLACES_BY_CATEGORY : 'GET_NEARBY_PLACES_BY_CATEGORY'\n};\n  \n  export default bformActionTypes;\n  ","import  baseFormTypes from '../actiontypes/bformtypes'\nconst baseURI = 'https://barikoi.xyz/v1/api/search';\n\n\nexport const getSuggestions = async (searchString) => {\n  const autoCompleteURI = `${baseURI}/autocomplete/MTcxMDpONUZaUFRLMTlT/`;\n\n  try {\n    const res = await fetch(`${autoCompleteURI}place?q='${searchString}'`);\n    const data = await res.json();\n    const places = data.places;\n\n    return places;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const revGeocoding = async (latLng) => {\n  const { lat, lng } = latLng;\n\n  try {\n    const res = await fetch(\n      `${baseURI}/reverse/MTcxMDpONUZaUFRLMTlT/geocode?longitude=${lng}&latitude=${lat}&district=true&post_code=true&country=true&sub_district=true&union=false&pauroshova=false&location_type=true`\n    );\n    const data = await res.json();\n    let place = data.place;\n\n    Object.assign(place, { latitude: `${lat}`, longitude: `${lng}` });\n    return place;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getUrlParamFromJson = (argFieldPairs) => {\n    let tempUrl = ''\n    try{\n        tempUrl = argFieldPairs.map(afp => afp.key + '=' + afp.value).join('&');\n    }catch(e){\n        console.log('')\n    }   \n    return tempUrl\n}\n\n\nexport const getJsonFromUrl = (url) => {\n  if(!url) url = window.location.href;\n  var question = url.indexOf(\"?\");\n  var hash = url.indexOf(\"#\");\n  if(hash==-1 && question==-1) return {'api_url': url,'json_param': {}};\n  if(hash==-1) hash = url.length;\n  var query = question==-1 || hash==question+1 ? url.substring(hash) : \n  url.substring(question+1,hash);\n  console.log(0, question)\n  var result = {\n  };\n  query.split(\"&\").forEach(function(part) {\n      if(!part) return;\n      part = part.split(\"+\").join(\" \"); // replace every + with space, regexp-free version\n      var eq = part.indexOf(\"=\");\n      var key = eq>-1 ? part.substr(0,eq) : part;\n      var val = eq>-1 ? decodeURIComponent(part.substr(eq+1)) : \"\";\n      var from = key.indexOf(\"[\");\n      if(from==-1) result[decodeURIComponent(key)] = val;\n      else {\n      var to = key.indexOf(\"]\",from);\n      var index = decodeURIComponent(key.substring(from+1,to));\n      key = decodeURIComponent(key.substring(0,from));\n      if(!result[key]) result[key] = [];\n      if(!index) result[key].push(val);\n      else result[key][index] = val;\n      }\n  });\n  return {\n    'api_url': url.substring(0,question),\n    'json_param': result\n  }\n}\n\nexport const responseTypeFromUrl = (rawResponse) => {\n  if (rawResponse.hasOwnProperty('place')) {\n    return {\n      'action_type' : baseFormTypes.SEARCH_SELECT_PLACE,\n      'action_payload' : rawResponse\n    }\n  }\n  else if (rawResponse.hasOwnProperty('places')) {\n    return {\n      'action_type' : baseFormTypes.SEARCH_AUTOCOMPLETE,\n      'action_payload' : rawResponse\n    }\n  }\n  else if (rawResponse.hasOwnProperty('geocoded_address')) {\n    return {\n      'action_type' : baseFormTypes.SEARCH_SELECT_PLACE,\n      'action_payload' : rawResponse\n    }\n  }\n  else if (rawResponse.hasOwnProperty('routes')) {\n    return {\n      'action_type' : baseFormTypes.SEARCH_SELECT_PLACE,\n      'action_payload' : rawResponse\n    }\n  }\n  else if (rawResponse.hasOwnProperty('Distance')) {\n    return {\n      'action_type' : baseFormTypes.SEARCH_SELECT_PLACE,\n      'action_payload' : rawResponse\n    }\n  }\n  else{\n    //todo...\n    return {\n      'action_type' : baseFormTypes.CALL_REV_GEO,\n      'action_payload' : rawResponse\n    }\n  }\n  \n}\n\n\nexport const setRequestObj = (requestMethod, requestBaseURL, requestURLParam, requestBody) => {\n    let requestConfig \n    let formData = new FormData();\n    switch (requestMethod) {\n\n        case 'POST':\n            let parsedBody = {}\n            requestBody.map((rb)=>{\n                parsedBody[rb.key] = rb.value\n                formData.append(rb.key, rb.value)\n            })\n            console.log(parsedBody)\n            requestConfig = {\n                method: requestMethod,\n                // header:{\n                //     'content-type': 'application/json'\n                // },\n                body: formData\n            }\n\n            return {\n                reqURL : requestBaseURL,\n                reqConfig : requestConfig\n            }\n    \n        default:\n            requestConfig = {\n                method: requestMethod,\n                header:{\n                    'content-type': 'application/x-www-form-urlencoded'\n                },\n            }\n\n            return {\n                reqURL : requestBaseURL+requestURLParam,\n                reqConfig : requestConfig\n            }\n    \n    }\n}\n\n\nexport const responseBlender = (rawResponse, cb, urlParams) => {\n    if (rawResponse.hasOwnProperty('place')) {\n      if(rawResponse.place.hasOwnProperty('latitude')){\n         cb({\n          'haslatlng': true,\n          'latitude': rawResponse.place.latitude,\n          'longitude': rawResponse.place.longitude,\n          'msg': rawResponse.place.address,\n          'apitype': 'search'\n        })\n      }\n      else{\n        const values = [...urlParams];\n        let lat = 23.7985508, lng = 90.3654215;\n        values.map((vl)=>{\n          if(vl.key==='latitude')lat = vl.value;\n          if(vl.key==='longitude')lng = vl.value;\n        })\n        cb({\n          'haslatlng': false,\n          'msg': rawResponse.place.address,\n          'latitude': lat,\n          'longitude': lng,\n          'apitype': 'search'\n        })\n      }\n    }\n    else if (rawResponse.hasOwnProperty('places')) {\n      console.log('placess...............')\n      cb({\n        'haslatlng': true,\n        'latitude': rawResponse.places[0].latitude,\n        'longitude': rawResponse.places[0].longitude,\n        'mgs': rawResponse.places[0].address,\n        'apitype': 'search'\n      })\n    }\n    else if (rawResponse.hasOwnProperty('geocoded_address')) {\n      cb({\n        'haslatlng': true,\n        'latitude': rawResponse.geocoded_address.latitude,\n        'longitude': rawResponse.geocoded_address.longitude,\n        'msg': rawResponse.geocoded_address.Address,\n        'apitype': 'search'\n      })\n    }\n    else if (rawResponse.hasOwnProperty('routes')) {\n      cb({\n        'haslatlng': false,\n        'apitype': 'route'\n      })\n    }\n    else if (rawResponse.hasOwnProperty('Distance')) {\n      cb({\n        'haslatlng': false,\n        'apitype': 'distance'\n      })\n    }\n    else{\n      //todo...\n    }\n}\n\n\n// export const createPost = postData => dispatch => {\n//     fetch('https://jsonplaceholder.typicode.com/posts', {\n//         method: 'POST',\n//         header:{\n//             'content-type': 'application/json'\n//         },\n//         body: JSON.stringify(postData)\n//     })\n//     .then(rest => rest.json())\n//     .then(post => dispatch({\n//         type: NEW_POST,\n//         payload: postData\n//     })); \n// }","import bformActionTypes from '../actiontypes/bformtypes';\nimport { responseBlender , responseTypeFromUrl} from '../factory/supportFactory'\n\n\n// export const sendRequest = (completeUrl) => dispatch => {\n//     fetch(completeUrl)\n//     .then(res => res.json())\n//     // .then(response => dispatch({\n//     //     type: bformActionTypes.CALL_REV_GEO,\n//     //     payload: response\n//     // }));   \n// }\n \n\nexport const callReverseGeo = (reqObj) => dispatch => {\n    fetch(reqObj.reqURL, reqObj.reqConfig)\n    .then(res => res.json())\n    .then(response => {\n        const actionObj = responseTypeFromUrl(response)\n        dispatch({\n            type: actionObj.action_type,\n            payload: actionObj.action_payload\n        })\n    });   \n}\n\nexport const getURLParams = () => ({\n    type: bformActionTypes.GET_URL_PARAMS,\n  });\n\n\nexport const passURLParams = (urlParams) => ({\n    type: bformActionTypes.PASS_URL_PARAMS,\n    payload: urlParams\n});\n  \n","import React, { Fragment, useState, useEffect} from \"react\";\nimport { Form, Button , Col} from 'react-bootstrap';\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\n\n\nimport { connect } from 'react-redux';\nimport { getFieldPairs } from '../actions/dformAction';\nimport { callReverseGeo, passURLParams } from '../actions/bformAction';\n\nimport { getJsonFromUrl, getUrlParamFromJson, setRequestObj} from '../factory/supportFactory'\n\n\nconst BasicForm = ({ fieldPairs, getPairs, sendRequest, passParams, urlParams}) => {\n    const SEARCH_URI = 'https://api.github.com/search/users';\n\n\n    useEffect(() => {\n        // getPairs()\n        generateCompleteUrl(fieldPairs)\n    }, [fieldPairs])\n    \n    const [baseUrl, setBaseUrl] = useState('https://barikoi.xyz/v1/api/search/reverse/MTc6UkFRMUJJSVlLVQ==/geocode?');\n    const [completeUrl, setCompleteUrl] = useState(baseUrl);\n    const [requestMethod, setRequestMethod] = useState('GET');\n    const [reqObj, setReqObj] = useState({reqURL: baseUrl, reqConfig:{\n        method: 'GET',\n        header:{\n            'content-type': 'application/x-www-form-urlencoded'\n        },\n    }})\n\n    const [isLoading, setIsLoading] = useState(false);\n  const [options, setOptions] = useState([]);\n\n  const handleSearch = (query) => {\n    setIsLoading(true);\n\n    fetch(`${SEARCH_URI}?q=${query}+in:login&page=1&per_page=50`)\n      .then((resp) => resp.json())\n      .then(({ items }) => {\n        const options = items.map((i) => ({\n          avatar_url: i.avatar_url,\n          id: i.id,\n          login: i.login,\n        }));\n\n        setOptions(options);\n        setIsLoading(false);\n      });\n  };\n\n    \n    const handleUrlInputBlur = (event) => {\n    \n        // if(event.target.value.trim() === completeUrl.trim()) return\n        \n        let temp_url_param_array = []\n        setCompleteUrl(event.target.value)\n        let url_param_obj = getJsonFromUrl(event.target.value)\n        setBaseUrl(url_param_obj.api_url+'?')\n        for (var property in url_param_obj.json_param) {\n            temp_url_param_array.push({'key': property, 'value': url_param_obj.json_param[property]})\n        }\n        let urlParam = getUrlParamFromJson(temp_url_param_array)\n        let tempReqObj = setRequestObj(requestMethod, url_param_obj.api_url+'?', urlParam, temp_url_param_array)\n        setReqObj(tempReqObj)\n        console.log(temp_url_param_array)\n        passParams(temp_url_param_array)\n        \n\n    };\n\n    const generateCompleteUrl = (argFieldPairs) => {\n        let urlParam = getUrlParamFromJson(argFieldPairs) \n        setCompleteUrl(baseUrl+urlParam)\n        let tempReqObj = setRequestObj(requestMethod, baseUrl, urlParam, argFieldPairs)\n        setReqObj(tempReqObj)\n        sendRequest(tempReqObj)\n    }\n\n   \n    const selectRequestMethod = (event) => {\n        setRequestMethod(event.target.value);\n        let urlParam = getUrlParamFromJson(urlParams) \n        setCompleteUrl(baseUrl+urlParam)\n        let tempReqObj = setRequestObj(event.target.value, baseUrl, urlParam, urlParams)\n        setReqObj(tempReqObj)\n        // let temPMethod = event.target.value\n        // setReqObj(prevState => {\n        //     prevState.reqConfig.method = temPMethod\n        //     return({\n        //         ...prevState\n        //     })\n        // })\n    }\n\n    \n    return (\n        <div>\n            <Form id=\"bform\">\n                <Form.Row>\n                    <Col>\n                        <Form.Control as=\"select\" onChange={(event)=> selectRequestMethod(event)} custom>\n                                <option value=\"GET\">GET</option>\n                                <option value=\"POST\">POST</option>\n                                <option value=\"DELETE\">DELETE</option>\n                                <option value=\"UPDATE\">UPDATE</option>\n                                <option value=\"PATCH\">PATCH</option>\n                        </Form.Control>\n                    </Col>\n                    <Col xs={7}>\n                        <Form.Control as=\"input\" placeholder=\"url\" onChange={event => handleUrlInputBlur(event)}  value={completeUrl}/>\n                    </Col>\n                    <Col>\n                    <Button variant=\"primary\" onClick={()=>sendRequest(reqObj)}>Send</Button>{' '}\n                    </Col>\n                    <Col>\n                    <Button variant=\"outline-dark\">Params</Button>\n                    </Col>\n                </Form.Row>\n            </Form>\n            {/* <AsyncTypeahead\n      id=\"async-example\"\n      isLoading={isLoading}\n      labelKey=\"login\"\n      minLength={3}\n      onSearch={handleSearch}\n      options={options}\n      placeholder=\"Search for a Github user...\"\n      renderMenuItemChildren={(option, props) => (\n        <Fragment>\n          <img\n            alt={option.login}\n            src={option.avatar_url}\n            style={{\n              height: '24px',\n              marginRight: '10px',\n              width: '24px',\n            }}\n          />\n          <span>{option.login}</span>\n        </Fragment>\n      )}\n    /> */}\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => ({\n    fieldPairs: state.dynamicform.fieldPairs,\n    responseRG: state.baseform.responseRG,\n    urlParams: state.baseform.urlParams\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getPairs: () => dispatch(getFieldPairs()),\n    sendRequest: (reqObj) => { dispatch(callReverseGeo(reqObj))}, \n    passParams: (urlParams) => {\n        dispatch(passURLParams(urlParams));\n    },\n    \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BasicForm)\n","import dformActionTypes from '../actiontypes/dformtypes';\n\nexport const passFieldPairs = (fieldPairs) => ({\n  type: dformActionTypes.PASS_FIELD_PAIRS,\n  payload: fieldPairs\n});\n\nexport const getFieldPairs = () => ({\n  type: dformActionTypes.GET_FIELD_PAIRS,\n});\n\n","import React, { useState, Fragment , useEffect} from \"react\";\n\nimport { connect } from 'react-redux'\n// import { initGeo } from '../actions/mapAction'\nimport { passFieldPairs } from '../actions/dformAction'\nimport { getURLParams } from '../actions/bformAction'\n\n\nconst DynamicForm =  ({ latlng, passPair, urlParams, getParams })  => {\n\n\n    useEffect(() => {\n      generateLatLonField()\n    }, [latlng])\n\n    useEffect(() => {\n      setInputFields(urlParams);\n    }, [urlParams])\n\n    const [inputFields, setInputFields] = useState([\n      {'key': 'latitude', 'value': 23.7985508}, {'key': 'longitude', 'value': 90.3654215}\n    ]);\n\n   \n  \n    const handleAddFields = () => {\n      const values = [...inputFields];\n      values.push({ key: '', value: '' });\n      setInputFields(values);\n      passPair(values)\n    };\n  \n    const handleRemoveFields = index => {\n      const values = [...inputFields];\n      (values.length > 1)? values.splice(index, 1): console.log('dont be a jerk')\n      \n      setInputFields(values);\n      passPair(values)\n    };\n  \n    const handleInputChange = (index, event) => {\n      const values = [...inputFields];\n      if (event.target.name === \"key\") {\n        values[index].key = event.target.value;\n      } else {\n        values[index].value = event.target.value;\n      }\n  \n      setInputFields(values);\n      passPair(values)\n    };\n  \n    // const handleSubmit = e => {\n    //   e.preventDefault();\n    //   console.log(latlng)\n    //   console.log(\"inputFields\", inputFields);\n    //   passFieldPairs(inputFields)\n    //   passPair(inputFields)\n    // };\n\n\n    const generateLatLonField = () => {\n      let hasLat = false;\n      let hasLng = false;\n      const values = [...inputFields];\n      values.map((value)=>{\n        \n        if(value.key==='latitude'){\n          value.value = latlng.lat;\n          hasLat = true;\n        }\n        if(value.key==='longitude'){\n          value.value = latlng.lng;\n          hasLng = true\n        }\n      })  \n      // (!hasLat)? values.unshift({'key':'latitude', 'value': latlng.lat}):null\n      // (!hasLng)? values.unshift({'key':'longitude', 'value': latlng.lng}):null\n      // const values = [...inputFields];\n      //   values.map((value)=>{\n      //     if(value.key==='latitude')value.value = latlng.lat;\n      //     if(value.key==='longitude')value.value = latlng.lng;\n      //   })\n        setInputFields(values);\n        passPair(values)\n    }\n  \n    return (\n      <>  \n        <form id='dfrom'>\n    \n          <div className=\"form-row\">\n            {inputFields.map((inputField, index) => (\n              <Fragment key={`${inputField}~${index}`}>\n                <div className=\"form-group col-sm-3\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"key\"\n                    id=\"key\"\n                    name=\"key\"\n                    value={inputField.key}\n                    onChange={event => handleInputChange(index, event)}\n                  />\n                </div>\n                <div className=\"form-group col-sm-7\">\n                  <input\n                    type=\"text\" \n                    className=\"form-control\" \n                    placeholder=\"Value\"\n                    id=\"value\"\n                    name=\"value\"\n                    value={inputField.value}\n                    onChange={event => handleInputChange(index, event)}\n                  />\n                </div>\n                <div className=\"form-group col-sm-2\">\n                  <button\n                    className=\"btn btn-link\"\n                    type=\"button\"\n                    onClick={() => handleRemoveFields(index)}\n                  >\n                    -\n                  </button>\n                  <button\n                    className=\"btn btn-link\"\n                    type=\"button\"\n                    onClick={() => handleAddFields()}\n                  >\n                    +\n                  </button>\n                </div>\n              </Fragment>\n            ))}\n          </div>\n          {/* <div className=\"submit-button\">\n            <button\n              className=\"btn btn-primary mr-2\"\n              type=\"button\"\n              onClick={(event)=>passPair(event, inputFields)}\n            >\n              SET\n            </button>\n          </div> */}\n          {/* <br/>\n          <pre>\n            {JSON.stringify(inputFields, null, 2)}\n          </pre> */}\n        </form>\n      </>\n    );\n  };\n\nconst mapStateToProps = state => ({\n    latlng: state.map.latlng,\n    urlParams: state.baseform.urlParams\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  // passFieldPairs: (fieldPairs) => dispatch(passFieldPairs(fieldPairs)),\n  passPair: (fieldPairs) => {\n    dispatch(passFieldPairs(fieldPairs));\n  },\n  getParams: () => dispatch(getURLParams()),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DynamicForm);","import L from \"leaflet\";\nimport {} from \"mapbox-gl-leaflet\";\nimport PropTypes from \"prop-types\";\nimport { GridLayer, withLeaflet } from \"react-leaflet\";\n\nclass MapBoxGLLayer extends GridLayer {\n  createLeafletElement(props) {\n    return L.mapboxGL(props);\n  }\n}\n\n/*\n * Props are the options supported by Mapbox Map object\n * Find options here:https://www.mapbox.com/mapbox-gl-js/api/#new-mapboxgl-map-options-\n */\nMapBoxGLLayer.propTypes = {\n  style: PropTypes.string\n};\n\nMapBoxGLLayer.defaultProps = {\n  style: \"https://map.barikoi.com/styles/osm-liberty/style.json\"\n};\n\nexport default withLeaflet(MapBoxGLLayer);\n","const mapActionTypes = {\n  INIT_GEO: 'INIT_GEO',\n  SET_MARKER: 'SET_MARKER',\n  SHOW_DETAILS: 'SHOW_DETAILS',\n  HIDE_DETAILS: 'HIDE_DETAILS',\n};\n\nexport default mapActionTypes;\n","import React, { createRef, Component } from \"react\";\nimport { connect } from 'react-redux'\nimport { Map, Marker, Popup } from \"react-leaflet\";\n\nimport MapboxLayer from \"../MapboxLayer\";\n\nimport { initGeo, setMarker, showDetails } from '../actions/mapAction'\n\nimport { responseBlender } from '../factory/supportFactory'\n\n\nclass MapComp extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      position: {\n        latitude: this.props.latlng.lat,\n        longitude: this.props.latlng.lng,\n        msg: 'you here'\n      }\n    }\n  }\n\n  setMapState = (stateData)=>{\n    this.setState({position: stateData})\n  }\n  \n  componentWillMount(){\n    console.log(this.props.latlng.lat)\n  }\n\n  componentWillReceiveProps(nextProps){\n    try{\n      if(nextProps.selectedPlace.hasOwnProperty('geocoded_address')){\n        this.setState(prevState => ({\n          position: {                   // object that we want to update\n              ...prevState.position,    // keep all other key-value pairs\n              latitude: nextProps.selectedPlace.geocoded_address.latitude,       // update the value of specific key,\n              longitude: nextProps.selectedPlace.geocoded_address.longitude,\n              msg: nextProps.selectedPlace.geocoded_address.Address\n          }\n        }))\n      }\n      else if(nextProps.selectedPlace.hasOwnProperty('place')){\n        if(nextProps.selectedPlace.place.hasOwnProperty('latitude')){\n          this.setState(prevState => ({\n            position: {                   // object that we want to update\n                ...prevState.position,    // keep all other key-value pairs\n                latitude: nextProps.selectedPlace.place.latitude,       // update the value of specific key,\n                longitude: nextProps.selectedPlace.place.longitude,\n                msg: nextProps.selectedPlace.place.address\n            }\n          }))\n        }\n        else{\n          const values = [...nextProps.urlParams];\n        let lat = 23.7985508, lng = 90.3654215;\n        values.map((vl)=>{\n          if(vl.key==='latitude')lat = vl.value;\n          if(vl.key==='longitude')lng = vl.value;\n        })\n          this.setState(prevState => ({\n            position: {                   // object that we want to update\n                latitude: lat,       // update the value of specific key,\n                longitude: lng,\n                msg: nextProps.selectedPlace.place.address\n            }\n          }))\n        }\n      }\n      else {\n        this.setState(prevState => ({\n          position: {                   // object that we want to update\n              ...prevState.position,    // keep all other key-value pairs\n              \n          }\n        }))\n      }\n    }catch(e){\n\n    }\n    \n  }\n\n\n\n  mapRef = createRef();\n\n  handleClick = async (e) => {\n    const latLng = {\n      lat: e.latlng.lat,\n      lng: e.latlng.lng\n    };\n\n    this.setState(prevState => ({\n      position: {              \n          ...prevState.position,    // keep all other key-value pairs\n          latitude: e.latlng.lat,\n          longitude: e.latlng.lng  \n\n      }\n    }))\n\n   await this.props.setMarker(latLng);\n    \n  }\n\n  handleLocationFound = (e) => {\n    const map = this.mapRef.current\n    this.props.setMarker({\n      lat: e.latLng.lat(),\n      lng: e.latLng.lng()\n    })\n\n    if (map != null) {\n      map.leafletElement.locate()\n    }\n  }\n\n\n  render() {\n\n    // const marker = this.props.hasLocation ? (\n    //   <Marker position={{lat: this.state.position.lat, lng: this.state.position.lng }}>\n    //     <Popup>{this.state.position.msg}</Popup>\n    //   </Marker>\n    // ) : null\n\n    const marker = (\n      <Marker position={{lat: this.state.position.latitude, lng: this.state.position.longitude }}>\n        <Popup>{this.state.position.msg}</Popup>\n      </Marker>)\n\n    return (\n      <div>\n        <Map center={{lat: this.state.position.latitude,lng: this.state.position.longitude }} zoom={this.props.zoom} length={4}\n        onClick={this.handleClick}\n        onLocationfound={this.handleLocationFound}\n        ref={this.mapRef}>\n          <MapboxLayer />\n          {this.props.selectedPlace!={} && marker}\n          { this.props.suggestions.length > 0 &&\n                    this.props.suggestions.map(item =>\n                        <Marker position={[item.latitude, item.longitude]} key={item.id}>\n                            <Popup><span>{ item.address }</span></Popup>\n                        </Marker>\n                    )\n          }\n        </Map>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n\n  latlng: state.map.latlng,\n  zoom: state.map.zoom,\n  responseRG: state.baseform.responseRG,\n  suggestions: state.baseform.suggestions,\n  selectedPlace: state.baseform.selectedPlace,\n  urlParams: state.baseform.urlParams\n\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  initGeo: () => dispatch(initGeo()),\n  setMarker: (location) => dispatch(setMarker(location)),\n  showDetails: (place) => dispatch(showDetails(place)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapComp)","import mapActionTypes from '../actiontypes/maptypes';\n\nexport const initGeo = () => ({\n  type: mapActionTypes.INIT_GEO,\n});\n\nexport const setMarker = (location) => ({\n  type: mapActionTypes.SET_MARKER,\n  payload: location,\n});\n\n\nexport const showDetails = (place) => ({\n  type: mapActionTypes.SHOW_DETAILS,\n  payload: place\n});\n\nexport const hideDetails = () => ({\n  type: mapActionTypes.HIDE_DETAILS,\n});\n","import React, { useState, useEffect} from \"react\";\nimport { connect } from 'react-redux';\n\nimport { Card, Form, FormControl, Button , Col, Jumbotron} from 'react-bootstrap';\nimport ReactJson from 'react-json-view'\n\nimport BasicForm from '../components/BasicForm'\nimport DynamicForm from '../components/DynamicForm'\nimport MapComp  from '../components/MapComp'\n\n\nconst ReverseGeo = ({responseRG}) => {\n    \n    let [jsonResponse, setJsonResponse] = useState({});\n\n    useEffect(() => {\n       setJsonResponse(responseRG)\n    }, [responseRG])\n\n\n    return (\n        <div className=\"container fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                <Card className=\"main-card-view\">\n                    <Card.Body>\n                        <Card.Title>Reverse Geocode</Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">Example</Card.Subtitle>\n                        <Jumbotron> \n                            <div>\n                            <BasicForm/>\n                            </div>\n                            <br/>\n                            <div>\n                            <DynamicForm/>\n                            </div>\n                            \n                        </Jumbotron>\n\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                               <div className=\"code-view\">\n                                    <ReactJson src={jsonResponse}  theme=\"rjv-default\"/>\n                               </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <MapComp/>\n                            </div>\n                        </div>\n                           \n                    </Card.Body>\n                </Card>\n                </div>\n\n            </div>\n\n            \n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    responseRG: state.baseform.responseRG\n});\n\nexport default connect(mapStateToProps, null)(ReverseGeo)\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styled from 'styled-components';\n\n\nimport { NavigationBar } from './components/Navbar'\nimport Sidebar from './components/Sidebar'\nimport DashboardPage from './pages/DashboardPage'\nimport PostsPage from './pages/PostsPage'\nimport SinglePostPage from './pages/SinglePostPage'\nimport ReverseGeo from './pages/ReverseGeo'\n\nconst GridWrapper = styled.div`\n  display: grid;\n  position: absolute;\n  margin-top: 6em;\n  width: 99%\n`;\n\nconst App = () => {\n  return (\n    <Router>\n      <NavigationBar />\n      <Sidebar/>\n      <GridWrapper>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n          <Switch>\n            <Route exact path=\"/\" component={DashboardPage} />\n            <Route exact path=\"/posts\" component={PostsPage} />\n            <Route exact path=\"/posts/:id\" component={SinglePostPage} />\n            <Route exact path=\"/revgeo\" component={ReverseGeo} />\n            <Redirect to=\"/\" />\n          </Switch>\n          </div>\n\n        </div>\n      </GridWrapper>\n      \n    </Router>\n  )\n}\n\nexport default App\n","import * as actions from '../actions/postsActions'\n\nexport const initialState = {\n  loading: false,\n  hasErrors: false,\n  posts: [],\n}\n\nexport default function postsReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.GET_POSTS:\n      return { ...state, loading: true }\n    case actions.GET_POSTS_SUCCESS:\n      return { posts: action.payload, loading: false, hasErrors: false }\n    case actions.GET_POSTS_FAILURE:\n      return { ...state, loading: false, hasErrors: true }\n    default:\n      return state\n  }\n}\n","import * as actions from '../actions/postActions'\n\nexport const initialState = {\n  loading: true,\n  hasErrors: false,\n  post: {},\n}\n\nexport default function postReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.GET_POST:\n      return { ...state, loading: true }\n    case actions.GET_POST_SUCCESS:\n      return { post: action.payload, loading: false, hasErrors: false }\n    case actions.GET_POST_FAILURE:\n      return { ...state, loading: false, hasErrors: true }\n    default:\n      return state\n  }\n}\n","import * as actions from '../actions/commentsActions'\n\nexport const initialState = {\n  loading: false,\n  hasErrors: false,\n  comments: [],\n}\n\nexport default function commentsReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.GET_COMMENTS:\n      return { ...state, loading: true }\n    case actions.GET_COMMENTS_SUCCESS:\n      return { ...state, comments: action.payload, loading: false, hasErrors: false }\n    case actions.GET_COMMENTS_FAILURE:\n      return { ...state, loading: false, hasErrors: true }\n    default:\n      return state\n  }\n}\n","import mapActionTypes from '../actiontypes/maptypes';\n\nconst INITIAL_STATE = {\n    hasLocation: false,\n    latlng: {\n      lat: 23.7985508,\n      lng: 90.3654215,\n    },\n    zoom: 13,\n    markerMsg: 'You Are Here',\n    showDetails: false,\n};\n\nconst mapReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case mapActionTypes.INIT_GEO:\n      return {\n        ...state\n      };\n    \n    case mapActionTypes.SET_MARKER:\n      return {\n        ...state,\n        latlng: action.payload,\n        hasLocation: true,\n      };\n      \n    case mapActionTypes.SHOW_DETAILS:\n      return {\n        ...state,\n        markerMsg: action.payload,\n        showDetails: true,\n      };\n    case mapActionTypes.HIDE_DETAILS:\n      return {\n        ...state,\n        showDetails: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default mapReducer;\n","import dformActionTypes from '../actiontypes/dformtypes';\n\nconst INITIAL_STATE = {\n   fieldPairs : [{'key': 'latitude', 'value': 23.7985508}, {'key': 'longitude', 'value': 90.3654215}]\n};\n\nconst dformReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n\n    case dformActionTypes.GET_FIELD_PAIRS:\n        console.log(\"GFP Reducer\")\n        return {\n          ...state\n        };\n\n    case dformActionTypes.PASS_FIELD_PAIRS:\n      console.log(\"PFP Reducer\")\n      return {\n        ...state,\n        fieldPairs: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default dformReducer;\n","import bformActionTypes from '../actiontypes/bformtypes';\n\nconst INITIAL_STATE = {\n   responseRG : {},\n   urlParams :  [{'key': 'latitude', 'value': 23.7985508}, {'key': 'longitude', 'value': 90.3654215}],\n   suggestions: [],\n   selectedPlace: {},\n   nearbyPlaces: []\n};\n\nconst bformReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n\n    case bformActionTypes.CALL_REV_GEO:\n      console.log(\"CRG Reducer\")\n      return {\n        ...state,\n        responseRG: action.payload\n      };\n\n      case bformActionTypes.GET_URL_PARAMS:\n        return {\n          ...state\n        };\n\n      case bformActionTypes.PASS_URL_PARAMS:\n        return {\n          ...state,\n          urlParams: action.payload\n        };\n\n        case bformActionTypes.SEARCH_AUTOCOMPLETE: {\n          return {\n\t\t\t\t...state,\n              suggestions: action.payload.places,\n\t\t\t  selectedPlace: {},\n\t\t\t  responseRG: action.payload,\n              nearbyPlaces: []\n          }\n      }\n\n      case bformActionTypes.SEARCH_SELECT_PLACE: {\n          return {\n\t\t\t\t...state,\n              suggestions: [],\n\t\t\t  selectedPlace: action.payload,\n\t\t\t  responseRG: action.payload,\n              nearbyPlaces: []\n          }\n      }\n\n      case bformActionTypes.GET_NEARBY_PLACES_BY_CATEGORY: {\n          return {\n              ...state,\n              nearbyPlaces: action.payload.nearbyPlaces\n          }\n      }\n\n\n    default:\n      return state;\n  }\n};\n\nexport default bformReducer;\n","import { combineReducers } from 'redux'\n\nimport postsReducer from './postsReducer'\nimport postReducer from './postReducer'\nimport commentsReducer from './commentsReducer'\nimport mapReducer from './mapReducer'\nimport dformReducer from './dformReducer'\nimport bformReducer from './bformReducer'\n\n\nconst rootReducer = combineReducers({\n  posts: postsReducer,\n  post: postReducer,\n  comments: commentsReducer,\n  map: mapReducer,\n  dynamicform: dformReducer,\n  baseform: bformReducer,\n})\n\nexport default rootReducer\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport App from './App'\nimport rootReducer from './reducers'\n\nimport './index.css'\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n)\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}